import './stencil.core';
/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import './stencil.core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface BulmaCard {
      'cardImage': string;
      'cardImagePlaceholder': string;
      'mediaImage': string;
      'mediaImagePlaceholder': string;
      'mediaSubTitle': string;
      'mediaTitle': string;
    }
  }

  interface HTMLBulmaCardElement extends StencilComponents.BulmaCard, HTMLStencilElement {}

  var HTMLBulmaCardElement: {
    prototype: HTMLBulmaCardElement;
    new (): HTMLBulmaCardElement;
  };
  interface HTMLElementTagNameMap {
    'bulma-card': HTMLBulmaCardElement;
  }
  interface ElementTagNameMap {
    'bulma-card': HTMLBulmaCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'bulma-card': JSXElements.BulmaCardAttributes;
    }
  }
  namespace JSXElements {
    export interface BulmaCardAttributes extends HTMLAttributes {
      'cardImage'?: string;
      'cardImagePlaceholder'?: string;
      'mediaImage'?: string;
      'mediaImagePlaceholder'?: string;
      'mediaSubTitle'?: string;
      'mediaTitle'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface BulmaMenu {
      'data': Object;
    }
  }

  interface HTMLBulmaMenuElement extends StencilComponents.BulmaMenu, HTMLStencilElement {}

  var HTMLBulmaMenuElement: {
    prototype: HTMLBulmaMenuElement;
    new (): HTMLBulmaMenuElement;
  };
  interface HTMLElementTagNameMap {
    'bulma-menu': HTMLBulmaMenuElement;
  }
  interface ElementTagNameMap {
    'bulma-menu': HTMLBulmaMenuElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'bulma-menu': JSXElements.BulmaMenuAttributes;
    }
  }
  namespace JSXElements {
    export interface BulmaMenuAttributes extends HTMLAttributes {
      'data'?: Object;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface BulmaModal {
      'isActive': boolean;
    }
  }

  interface HTMLBulmaModalElement extends StencilComponents.BulmaModal, HTMLStencilElement {}

  var HTMLBulmaModalElement: {
    prototype: HTMLBulmaModalElement;
    new (): HTMLBulmaModalElement;
  };
  interface HTMLElementTagNameMap {
    'bulma-modal': HTMLBulmaModalElement;
  }
  interface ElementTagNameMap {
    'bulma-modal': HTMLBulmaModalElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'bulma-modal': JSXElements.BulmaModalAttributes;
    }
  }
  namespace JSXElements {
    export interface BulmaModalAttributes extends HTMLAttributes {
      'isActive'?: boolean;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;